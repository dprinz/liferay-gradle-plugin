apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.github.jelmerk'
archivesBaseName = 'liferay-plugin'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.5
targetCompatibility = 1.5

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile gradleApi()
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { deployment ->
                signPom(deployment)
            }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
        }
    }
}

configure(install.repositories.mavenInstaller) {
    pom.project {

        packaging = 'jar'

        description 'Liferay plugin for Gradle'
        url  'https://github.com/jelmerk/liferay-gradle-plugin'

        scm {
            connection 'scm:git:http://github.com/jelmerk/liferay-gradle-plugin.git'
            developerConnection 'scm:git:https://github.com/jelmerk/liferay-gradle-plugin.git'
            url 'https://github.com/jelmerk/liferay-gradle-plugin'
        }
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }
        developers {
            developer {
                id 'jelmerk'
                name 'Jelmer Kuperus'
                timezone 'Europe/Amsterdam'
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.0'
}